---
output: html_document
editor_options: 
  chunk_output_type: console
---

```{r}
#| eval: true
#| echo: true
#| message: false
#| include: false
##~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
##                                    setup                                 ----
##~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

#..........................load packages.........................
library(tidyverse)
library(tigris)

#.........................get shape data.........................
county_geo <- tigris::counties(class = "sf", cb = TRUE) |> 
  shift_geometry()

#....................import precipitation data...................
precip_data <- read_csv(here::here("course-materials", "lecture-slides", "data", "county-feb19-jan24-precip.csv"), skip = 4)

##~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
##                               data wrangling                             ----
##~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     
##~~~~~~~~~~~~~~~~~~~~~~~~~~~~
##  ~ wrangle geometries  ----
##~~~~~~~~~~~~~~~~~~~~~~~~~~~~

county_geo_wrangled <- county_geo |>
  janitor::clean_names() |>
  rename(county = namelsad, state = state_name) |>
  filter(!state %in% c("Alaska", "Hawaii", "District of Columbia",
                       "United States Virgin Islands", "Puerto Rico", "American Samoa",
                       "Commonwealth of the Northern Mariana Islands", "Guam")) |>
  mutate(county = str_replace(string = county, pattern = " city", replacement = " City"))

##~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
##  ~ wrangle precipitation data  ----
##~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

precip_wrangled <- precip_data |>
  janitor::clean_names() |>
  rename(county = name) |>
  filter(!county %in% c("Washington, D.C.")) |>
  mutate(county = str_replace(string = county, pattern = "Dona Ana County", replacement = "DoÃ±a Ana County")) |>
  mutate(value = as.numeric(value),
         x1901_2000_mean = as.numeric(x1901_2000_mean)) |>
  mutate(perc_change = ((value - x1901_2000_mean)/x1901_2000_mean)*100) |>
  select(id, state, county, mean_1901_2000 = x1901_2000_mean, precip = value, perc_change, anomaly_1901_2000_base_period)

##~~~~~~~~~~~~~~~~~~
##  ~ join dfs  ----
##~~~~~~~~~~~~~~~~~~

# join dfs (see https://github.com/tidyverse/ggplot2/issues/3936 & https://map-rfun.library.duke.edu/032_thematic_mapping_geom_sf.html) -------
joined_precip_geom <- full_join(county_geo_wrangled, precip_wrangled) 
```

<!-- --- -->

<!-- DATA WRANGLING ALTERNATIVE: USING THE {maps} PACKAGE -->

<!-- Here, we'll wrangle our precipitation data, then join it with our US county data (courtesy of the [`{maps}` package](https://cran.r-project.org/web/packages/maps/index.html)): -->

<!-- ```{r} -->
<!-- #| eval: false -->
<!-- #| echo: false -->
<!-- ##~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
<!-- ##                                    setup                                 ---- -->
<!-- ##~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->

<!-- #..........................load packages......................... -->
<!-- library(tidyverse) -->
<!-- library(maps) -->

<!-- #.........................get shape data......................... -->
<!-- states <- map_data("state") -->
<!-- counties <- map_data("county") -->

<!-- #....................import precipitation data................... -->
<!-- precip_counties <- read_csv(here::here("slides", "data", "county-jan19-dec23-precip.csv"), skip = 4) |> -->
<!--   janitor::clean_names() -->

<!-- ##~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
<!-- ##                               data wrangling                             ---- -->
<!-- ##~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->

<!-- #..............update names of counties df variables............. -->
<!-- us_counties <- counties |> -->

<!--   # select / rename cols of interest ---- -->
<!--   select(state = region, county = subregion, long, lat, group, order) |> -->

<!--   # make all county & state names Title Case ---- -->
<!--   mutate(county = str_to_title(county), -->
<!--          state = str_to_title(state)) |> -->

<!--   # fix different spellings so that they match county names in precip data ---- -->
<!--   mutate(county = case_when( -->
<!--     county == "De Kalb" ~ "DeKalb", -->
<!--     county == "De Soto" ~ "DeSoto", # works for FL & MI -->
<!--     county == "Du Page" ~ "DuPage", -->
<!--     county == "La Porte" ~ "LaPorte", -->
<!--     county == "Obrien" ~ "O'Brien", -->
<!--     county == "Prince Georges" ~ "Prince George's", -->
<!--     county == "Queen Annes" ~ "Queen Anne's", -->
<!--     county == "Ste Genevieve" ~ "Ste. Genevieve", -->
<!--     county == "La Moure" ~ "LaMoure", -->
<!--     state == "Texas" & county == "De Witt" ~ "DeWitt", -->
<!--     # county == "St. Marys" ~ "St. Mary's", # isn't working?? -->
<!--     TRUE ~ county -->
<!--     )) |> -->
<!--   mutate(county = str_replace(string = county, pattern = "St ", replacement = "St. ")) |> -->

<!--   # remove DC & Yellowstone National Park ---- -->
<!--   filter(!state %in% c("District Of Columbia")) |> -->
<!--   filter(!county %in% c("Yellowstone National")) -->


<!-- #..........clean precip data & make sure var names match......... -->
<!-- precip_counties_wrangled <- precip_counties |> -->

<!--   # more intuitive col name ---- -->
<!--   rename(county = name) |> -->

<!--   # make all county & state names lower case ---- -->
<!--   mutate(county = str_to_lower(county), -->
<!--          state = str_to_lower(state)) |> -->

<!--   # remove recurring patterns ---- -->
<!--   mutate(county = str_remove(county, pattern = " county")) |> # across all county names -->
<!--   mutate(county = str_remove(county, pattern = " parish")) |> # LA -->

<!--   # make state & county names Title Case again ---- -->
<!--   mutate(county = str_to_title(county), -->
<!--          state = str_to_title(state)) |> -->

<!--   # fix different spellings so that they match county names in precip data ---- -->
<!--   mutate(county = case_when( -->
<!--     county == "Dekalb" ~ "DeKalb", -->
<!--     county == "Desoto" ~ "DeSoto", # works for FL & MI -->
<!--     state == "Louisiana" & county == "De Soto" ~ "DeSoto", -->
<!--     county == "Dupage" ~ "DuPage", -->
<!--     county == "Lasalle" ~ "La Salle", -->
<!--     county == "Laporte" ~ "LaPorte", -->
<!--     county == "O'brien" ~ "O'Brien", -->
<!--     county == "Lamoure" ~ "LaMoure", -->
<!--     state == "Texas" & county == "Dewitt" ~ "DeWitt", -->
<!--     county == "St. Mary's" ~ "St. Marys", -->
<!--     county == "Suffolk City" ~ "Suffolk", -->
<!--     county == "Hampton City" ~ "Hampton", -->
<!--     county == "Virginia Beach City" ~ "Virginia Beach", -->
<!--     county == "Newport News City" ~ "Newport News", -->
<!--     county == "Norfolk City" ~ "Norfolk", -->
<!--     TRUE ~ county -->
<!--   )) |> -->

<!--   # remove DC & other non-counties -->
<!--   filter(!county %in% c("Washington, D.c.", "Alexandria City", "Bristol City")) |> -->

<!--   # coerce precip & 20th centruy avg from chr to numeric ---- -->
<!--   mutate(value = as.numeric(value), -->
<!--          x1901_2000_mean = as.numeric(x1901_2000_mean)) |> -->

<!--   # calculate % change ---- -->
<!--   mutate(perc_change = ((value - x1901_2000_mean)/x1901_2000_mean)*100) |> -->

<!--   # select & rename cols ---- -->
<!--   select(state, county, mean_1901_2000 = x1901_2000_mean, precip = value, perc_change, anomaly_1901_2000_base_period) -->

<!-- ##~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
<!-- ##  ~ used to identify which county names don't match across dfs  ---- -->
<!-- ##~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->

<!-- # unique_us_counties <- us_counties |> -->
<!-- #   distinct(state, county) -->
<!-- # -->
<!-- # unique_precip_counties <- precip_counties_wrangled |> -->
<!-- #   distinct(state, county) -->
<!-- # -->
<!-- # missing_from_us_counties <- anti_join(unique_precip_counties, unique_us_counties) |> -->
<!-- #   rename(county_in_us = county) -->
<!-- # -->
<!-- # missing_from_precip_counties <- anti_join(unique_us_counties, unique_precip_counties) |> -->
<!-- #   rename(county_in_precip = county) -->

<!-- ##~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
<!-- ##  ~ ----------------------------------------------------------  ---- -->
<!-- ##~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->

<!-- #............................join dfs............................ -->
<!-- joined_precip_us_counties <- full_join(precip_counties_wrangled, us_counties) -->
<!-- ``` -->

<!-- ```{r} -->
<!-- #| eval: false -->
<!-- #| echo: false -->
<!-- ##~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
<!-- ##                                    setup                                 ---- -->
<!-- ##~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->

<!-- #..........................load packages......................... -->
<!-- library(tidyverse) -->
<!-- library(maps) -->

<!-- #.........................get shape data......................... -->
<!-- states <- map_data("state") -->
<!-- counties <- map_data("county") -->

<!-- #....................import precipitation data................... -->
<!-- precip_counties <- read_csv(here::here("week5", "data", "county-jan19-dec23-precip.csv"), skip = 4) |> -->
<!--   janitor::clean_names() -->

<!-- ##~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
<!-- ##                               data wrangling                             ---- -->
<!-- ##~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->

<!-- #..............update names of counties df variables............. -->
<!-- us_counties <- counties |> -->

<!--   # select / rename cols of interest ---- -->
<!--   select(state = region, county = subregion, long, lat, group, order) |> -->

<!--   # make all county & state names Title Case ---- -->
<!--   mutate(county = str_to_title(county), -->
<!--          state = str_to_title(state)) |> -->

<!--   # fix different spellings so that they match county names in precip data ---- -->
<!--   mutate(county = case_when( -->
<!--     county == "De Kalb" ~ "DeKalb", -->
<!--     county == "De Soto" ~ "DeSoto", -->
<!--     county == "Du Page" ~ "DuPage", -->
<!--     county == "La Porte" ~ "LaPorte", -->
<!--     county == "Obrien" ~ "O'Brien", -->
<!--     county == "Prince Georges" ~ "Prince George's", -->
<!--     county == "Queen Annes" ~ "Queen Anne's", -->
<!--     county == "Ste Genevieve" ~ "Ste. Genevieve", -->
<!--     county == "La Moure" ~ "LaMoure", -->
<!--     state == "Texas" & county == "De Witt" ~ "DeWitt", -->
<!--     TRUE ~ county -->
<!--     )) |> -->
<!--   mutate(county = str_replace(string = county, pattern = "St ", replacement = "St. ")) |> -->

<!--   # remove DC & Yellowstone National Park ---- -->
<!--   filter(!state %in% c("District Of Columbia")) |> -->
<!--   filter(!county %in% c("Yellowstone National")) -->


<!-- #..........clean precip data & make sure var names match......... -->
<!-- precip_counties_wrangled <- precip_counties |> -->

<!--   # more intuitive col name ---- -->
<!--   rename(county = name) |> -->

<!--   # make all county & state names lower case ---- -->
<!--   mutate(county = str_to_lower(county), -->
<!--          state = str_to_lower(state)) |> -->

<!--   # remove recurring patterns ---- -->
<!--   mutate(county = str_remove(county, pattern = " county")) |> -->
<!--   mutate(county = str_remove(county, pattern = " parish")) |> -->

<!--   # make state & county names Title Case again ---- -->
<!--   mutate(county = str_to_title(county), -->
<!--          state = str_to_title(state)) |> -->

<!--   # fix different spellings so that they match county names in precip data ---- -->
<!--   mutate(county = case_when( -->
<!--     county == "Dekalb" ~ "DeKalb", -->
<!--     county == "Desoto" ~ "DeSoto", -->
<!--     state == "Louisiana" & county == "De Soto" ~ "DeSoto", -->
<!--     county == "Dupage" ~ "DuPage", -->
<!--     county == "Lasalle" ~ "La Salle", -->
<!--     county == "Laporte" ~ "LaPorte", -->
<!--     county == "O'brien" ~ "O'Brien", -->
<!--     county == "Lamoure" ~ "LaMoure", -->
<!--     state == "Texas" & county == "Dewitt" ~ "DeWitt", -->
<!--     county == "St. Mary's" ~ "St. Marys", -->
<!--     county == "Suffolk City" ~ "Suffolk", -->
<!--     county == "Hampton City" ~ "Hampton", -->
<!--     county == "Virginia Beach City" ~ "Virginia Beach", -->
<!--     county == "Newport News City" ~ "Newport News", -->
<!--     county == "Norfolk City" ~ "Norfolk", -->
<!--     TRUE ~ county -->
<!--   )) |> -->

<!--   # remove DC & other non-counties -->
<!--   filter(!county %in% c("Washington, D.c.", "Alexandria City", "Bristol City")) |> -->

<!--   # coerce precip & 20th centruy avg from chr to numeric ---- -->
<!--   mutate(value = as.numeric(value), -->
<!--          x1901_2000_mean = as.numeric(x1901_2000_mean)) |> -->

<!--   # calculate % change ---- -->
<!--   mutate(perc_change = ((value - x1901_2000_mean)/x1901_2000_mean)*100) |> -->

<!--   # select & rename cols ---- -->
<!--   select(state, county, mean_1901_2000 = x1901_2000_mean, precip = value, perc_change, anomaly_1901_2000_base_period) -->

<!-- ##~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
<!-- ##  ~ used to identify which county names don't match across dfs  ---- -->
<!-- ##~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->

<!-- # unique_us_counties <- us_counties |> -->
<!-- #   distinct(state, county) -->
<!-- # -->
<!-- # unique_precip_counties <- precip_counties_wrangled |> -->
<!-- #   distinct(state, county) -->
<!-- # -->
<!-- # missing_from_us_counties <- anti_join(unique_precip_counties, unique_us_counties) |> -->
<!-- #   rename(county_in_us = county) -->
<!-- # -->
<!-- # missing_from_precip_counties <- anti_join(unique_us_counties, unique_precip_counties) |> -->
<!-- #   rename(county_in_precip = county) -->

<!-- ##~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
<!-- ##  ~ ----------------------------------------------------------  ---- -->
<!-- ##~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->

<!-- #............................join dfs............................ -->
<!-- joined_precip_us_counties <- full_join(precip_counties_wrangled, us_counties) -->
<!-- ``` -->

<!-- --- -->
