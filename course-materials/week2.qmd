---
title: "Choosing a graphic form, Fundamental chart types (part I)"
subtitle: "Week 2"
description: "Monday January 13^th^, 2025"
---

```{r}
#| eval: true 
#| echo: false
#| fig-align: "center"
#| out-width: "65%" 
#| fig-alt: "A group of fuzzy round monsters with binoculars, backpacks and guide books looking up a graphs flying around with wings (like birders, but with exploratory data visualizations). Stylized text reads 'ggplot2: visual data exploration.' Learn more about ggplot2."
knitr::include_graphics(here::here("images", "horst-ggplot-explore-dataviz.png"))
```

:::{.gray-text .center-text}
*Artwork by [Allison Horst](https://allisonhorst.com/){target="_blank"}*
:::

## {{< fa clipboard-list title="a clipboard with a To Do list" >}} Pre-class Prep {#pre-class-prep}

### A. Install required packages {#install-pkgs}

```{r}
#| eval: false
#| echo: true
#| code-line-numbers: false
install.packages("usethis") # for editing .Renviron (see step C. in pre-class prep)
install.packages("chron") # for working with dates / times
install.packages("naniar") # tools for exploring & handing missing data
install.packages("tidytuesdayR") # used to download TidyTuesday data
install.packages("tidycensus") # an R package that allows users to interface with a select number of the US Census Bureauâ€™s data APIs and return tidyverse-ready data frames
install.packages("ggridges") # {ggplot2} extension for creating ridgeline plots
install.packages("gghighlight") # {ggplot2} extension for highlighting geoms
install.packages("ggbeeswarm") # {ggplot2} extension for creating categorical scatter (violin point) plots
install.packages("see") # {ggplot2} extension for model visualization (we'll be using it for it's geom, geom_violindot())
install.packages("scales") # provides the internal scaling infrastructure used by ggplot2, and gives you tools to override the default breaks, labels, transformations and palettes (installed automatically with {ggplot2} or {tidyverse})
```

### B. Download data {#download-data}

- **Lyme Disease Cases by State or Locality ([download link](https://www.cdc.gov/lyme/datasurveillance/case-counts/Lyme_Disease_Cases_by_State_or_Locality.csv))**, made available by the CDC (read more on the CDC's [Lyme Disease Surveillance Data page](https://www.cdc.gov/lyme/data-research/facts-stats/surveillance-data-1.html){target="_blank"}; see other available data under the "Dashboard data files" section)
  - save the downloaded data (`Lyme_Disease_Cases_by_State_or_Locality.csv`) to your class repo at the file path: `EDS-240-class-examples/week2/data/Lyme_Disease_Cases_by_State_or_Locality.csv`

### C. Request a US Census Bureau API key & add it to your `.Renviron` file {#request-API-key}

1. To use the [`{tidycensus}` package](https://walker-data.com/tidycensus/){target="_blank} to access US Census Bureau data, you'll first need to **request and activate an API key**. Do so by following these steps:

    a. Request an API key at <http://api.census.gov/data/key_signup.html>{target="_blank}
    b. After a short period of time, you should receive an email with your key (it may be helpful to star / bookmark that email), and click the included link to activate your key (**Note:** if you get an error when activating your key, close your browser window and try clicking the activation link again).

2. **Add your API key to your `.Renviron` file**. For security purposes, you should *NEVER* push any API keys to GitHub. Rather than typing our API key into any of our scripts, we can instead save it to and read it from our `.Renviron` file. Follow these steps:

    a. Run `usethis::edit_r_environ()` in your Console, which will open up your `.Renviron` file (it will create it if you don't already have one).
    b. Store envrionment variables as key / value pairs. Add your API key as shown, below, then save and restart R for your changes to take effect.
    
```{r filename=".Renviron"}
#| eval: false
#| echo: true
#| code-line-numbers: false
# be sure to name it exactly as written here (all caps) 
CENSUS_API_KEY="XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX"
```

- **Note:** You may also consider storing your API key in a password manager for safe keeping (e.g. in case your computer decides to call a quits, is lost, etc.) 

::: {.callout-note collapse=true}
## What exactly is `.Renviron`?

[Dotfiles](https://en.wikipedia.org/wiki/Hidden_file_and_hidden_directory){target="_blank"} (files which are preceded by a dot, `.`) are hidden files, which are broadly used to customize the behavior of programs. You may already be familiar with some dotfiles, such as `.gitconfig` and `.gitignore`.

**The `.Renviron` file is an R-specific dotfile, which is commonly used for (though not limited to) storing sensitive information, such as API keys.** It lives in your computer's home directory (e.g. `/Users/yourUserName` on macOS, or `C:/Users/yourUserName/Documents` on Windows), and is automatically sourced when an R session starts. When sourced, all stored variables (such as your API key) are made available to your R environment for you to use. Variables should be stored as key / value pairs (e.g. `KEY_NAME="VALUE"`. Access them using `Sys.getenv("KEY_NAME")`.

Oftentimes, packages that are built to interface with APIs will include their own helper functions for adding API keys to your `.Renviron` file (e.g. see [`tidycensus::census_api_key()`](https://walker-data.com/tidycensus/reference/census_api_key.html){target="_blank"}). You may choose to use these helper functions in place of `usethis::edit_r_environ()`, if you prefer.
:::
    
<!-- To prevent us from accidentally pushing our key(s), we can save it to a separate file which we'll add to our `.gitignore`. Do so by following these steps: -->

<!--   a. Create a `week2/` folder in the root directory of your class repo -->

<!--   b. Add a file to your `week2/` folder called `KEYS.R`, and save your API key to an object name like this: -->

<!-- ```{r filename="~/week2/KEYS.R"} -->
<!-- #| eval: false -->
<!-- #| echo: true -->
<!-- censusKEY <- "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX" -->
<!-- ``` -->

<!--   b. Add `KEYS.R` to your `.gitignore` -->

<!-- ```{r filename=".gitignore"} -->
<!-- #| eval: false -->
<!-- #| echo: true -->
<!-- /week2/KEYS.R -->
<!-- ``` -->

<!--   c. Save `.gitignore` (once saved, you should see the newly added `KEYS.R` file disappear from your **Git** pane in RStudio, and a modified `.gitignore` appear). Stage/add, commit, and push this `.gitignore` file to GitHub -->

<!-- In class, we'll source our key (by running `source(here::here("week2", "KEYS.R"))`) into any scripts / Qmd files, where required.  -->

### D. Download `.qmd` templates & review initial data wrangling code {#download-templates}

1. Download all necessary templates (links in the table below) and save them to a `EDS-240-data-viz-examples/week2/` folder. 

2. Review the data wrangling code under the `## Setup` section of each template file and make note of any questions you might have. Due to time constraints, we won't be live-coding our way through the data wrangling code in class. However, we'll reserve some time to answer any questions before we jump into data viz {{< fa face-smile title="a smiling face" >}}.

## {{< fa person-chalkboard title="a person pointing at a chalkboard" >}} Lecture Materials {#lecture-materials}

| {{< fa person-chalkboard title="A person motioning at a chalkboard" >}} Lecture slides   | {{< fa file-code title="A code file" >}} Code-along template | {{< fa key title="A key" >}} Code-along key |
|------------------------------------------------------------------------------------------|--------------------------------------------------------------|---------------------------------------------------|
| [Lecture 2.1: choosing graphic form](lecture-slides/lecture2.1-choosing-graphic-forms-slides.qmd){target="_blank"}  | *NA* | *NA* |
| [Lecture 2.2: visualizing distributions](lecture-slides/lecture2.2-distributions-slides.qmd){target="_blank"}  | [2.2 template](https://github.com/EDS-240-Data-Viz/code-along-templates/blob/main/week2/TEMPLATE-lecture2.2-distributions.qmd){target="_blank"} | [2.2 key](keys/KEY-lecture2.2-distributions.qmd){target="_blank"} |
| [Lecture 2.3: visualizing evolution](lecture-slides/lecture2.3-evolution-slides.qmd){target="_blank"}  | [2.3 template](https://github.com/EDS-240-Data-Viz/code-along-templates/blob/main/week2/TEMPLATE-lecture2.3-evolution.qmd){target="_blank"} | [2.3 key](keys/KEY-lecture2.3-evolution.qmd){target="_blank"} |
: {.hover .bordered tbl-colwidths="[50,25,25]"} 

## {{< fa clipboard-list title="a clipboard with a To Do list" >}} Pre-discussion Prep {#pre-discussion-prep} 
### A. Prepare a `week2-discussion.qmd` file

Add a new blank file to your class repo at the following location: `EDS-240-class-examples/week2/week2-discussion.qmd.` Fill out the necessary YAML information (title, author, date + any other information you find helpful).

### B. (OPTIONAL) Install Google Chrome extension(s)

Install the [ColorPick Eyedropper](https://chrome.google.com/webstore/detail/colorpick-eyedropper/ohcpnigalekghcmgcdcenkpelffpdolg) Google Chrome extension, which makes it easy to select color values from webpages.

## {{< fa comments title="two speech bubbles" >}} Discussion Materials

| {{< fa person-chalkboard title="A person motioning at a chalkboard" >}} Discussion Slides | {{< fa file-code title="A code file" >}} Exercise instructions | {{< fa key title="A key" >}} Exercise solutions |
|-------------------|-------------------|--------------|
| [D2 slides: USDM](discussion/week2/week2-slides.qmd){target="_blank"} | [D2 exercise: recreate USDM viz](discussion/week2/week2-exercise.qmd) | [D2 solution](discussion/week2/week2-solution.qmd) |
: {.hover .bordered tbl-colwidths="[35,35,30]"} 

## {{< fa pencil title="pencil" >}} Assignment Reminders {#assignment-reminders}

<!-- | Assignment Type | Assignment Title         | Date Assigned  | Date Due                   | -->
<!-- |-----------------|--------------------------|----------------|----------------------------| -->
<!-- | EOC             | EOC (week 2)             | Mon 01/13/2025 | Mon 01/13/2025, 11:55pm PT | -->
<!-- | HW              | Homework Assignment #1   | Tue 01/07/2025 | Tue 01/21/2025, 11:59pm PT | -->
<!-- : {.hover .bordered tbl-colwidths="[20,30,20,30]"}  -->

| Assignment Type | Assignment Title                                  | Date Assigned  | Date Due                   |
|-----------------|---------------------------------------------------|----------------|----------------------------|
| EOC             | [EOC (week 2)](https://forms.gle/G5DbEAxKCxyaCZyB8){target="_blank"}  | Mon 01/13/2024 | Mon 01/13/2024, 11:55pm PT |
| HW              | [Homework Assignment #1](assignments/HW1.qmd)  | Tue 01/07/2025 | Tue 01/21/2025, 11:59pm PT |
: {.hover .bordered tbl-colwidths="[20,30,20,30]"}
