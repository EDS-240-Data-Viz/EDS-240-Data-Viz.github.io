---
title: "Assignment #1 (HW #1)"
subtitle: "Assigned Mon 01/06/2025 | Due Sat 01/21/2025"
editor_options: 
  chunk_output_type: console
---

::: {.callout-important}
## You must earn a "Satisfactory" mark for each individual Part (I and II) to earn a "Satisfactory" mark for Assignment #1.

**Read each part of the assignment carefully**, and use the check boxes to ensure you've addressed all elements of the assignment!
:::

# [Part I: Annotating `{ggplot2}` code]{.pink-text} {#hw1-p1}

## Learning Outcomes {#hw1-p1-LOs}

- read code written by others 
- assess, critique, and provide constructive feedback on data visualizations

## Description {#hw1-p1-description}

Much of your time as a data scientist will be spent looking at code written by others -- you may imagine scenarios such as trying to learn from and adapt someone else's code for your own work, conducting a code review for a colleague, or validating the code output of a generative AI tool. Being able to look at and make sense of code that you did not write yourself is an invaluable skill and an important one to practice throughout your learning journey. Here, you'll be asked to interpret and annotate `{ggplot2}` code written by someone else. This will likely require running code (both as a whole *and* line-by-line), as well as Googling and / or reading documentation.

*I recognize that there is (likely) **a lot** of new code presented here that we haven't yet covered in this course (we'll get there eventually though!). This is intentionally an exercise is resourcefulness! By the end of this exercise, you should feel a bit more confident in your ability to interpret (and maybe even reuse!) code written by others.*

### 1a. Annotate code {#hw1-p1a}

Annotate code adapted from [Dan Oehm](https://gradientdescending.com/#google_vignette){target="_blank"}'s ***UFO Sightings*** visualization ([original code](https://github.com/doehm/tidytues/blob/main/scripts/2023/week-25-ufo/ufo.R){target="_blank"} & [original visualization](https://github.com/doehm/tidytues/blob/main/scripts/2023/week-25-ufo/ufo.png){target="_blank"}). You can find metadata and additional information about the data set on the [rfordatascience/tidytuesday (2023-06-20) `readme.md`](https://github.com/rfordatascience/tidytuesday/blob/master/data/2023/2023-06-20/readme.md#data-dictionary){target="_blank"}. [**Part 1 should be completed via GitHub Classroom (find the assignment link on Slack).**]{.teal-text}

::: {.callout-note}
## You'll be annotating *refactored* code
Dan Oehm is the original visionary and creator of this epic TidyTuesday submission from 2023. The code you'll be annotating for this assignment is a *refactored* version of Dan's [original code](https://github.com/doehm/tidytues/blob/main/scripts/2023/week-25-ufo/ufo.R){target="_blank"}. **Refactoring** is the process of restructuring (e.g. reorganizing or rewriting) code while preserving its original functionality / output (e.g. the only visual differences in the outputs are the UFO image and plot caption, which were intentionally changed). 
:::

::: {.grid}
::: {.g-col-12 .g-col-md-6}
```{r}
#| eval: true
#| echo: false
#| fig-align: "center"
#| out-width: "80%"
knitr::include_graphics("images/oehm-ufo.png")
```

::: {.center-text .body-text-s .gray-text}
Original viz, by Dan Oehm ([original code](https://github.com/doehm/tidytues/blob/main/scripts/2023/week-25-ufo/ufo.R){target="_blank"})
:::
:::

::: {.g-col-12 .g-col-md-6}
```{r}
#| eval: true
#| echo: false
#| fig-align: "center"
#| out-width: "80%"
knitr::include_graphics("images/shanny-csik-ufo.png")
```

::: {.center-text .body-text-s .gray-text}
Modified viz, by Sam Shanny-Csik (refactored code, see below)
:::
:::
:::

::: {.center-text .gray-text}
*To enlarge image (in Chrome), **right-click on image** > **Open Image in New Tab***
:::

::: {.callout-tip collapse="true"}
## See the code + some tips for getting started

::: {.center-text .teal-text .body-text-m}
**Begin by accepting the HW #1 assignment via GitHub Classroom (link will be shared in Slack). The code below is included only for reference.**
:::

# Tips: 
- Install the following packages (if you don't already have them): `{colorspace}`, `{geofacet}`, `{ggtext}`, `{glue}`, `{grid}`, `{magick}`, `{patchwork}`, `{scales}`, `{showtext}`, `{tidyverse}`
- The best (and really only) way to understand this code is to run it **line-by-line** -- for example, you might check out an original data frame > add in the first piped data wrangling function > check out the modified data frame > pipe in the next data wrangling function > check out the modified data frame again > and so on. You can approach "building up" the ggplot objects in a similar fashion. 
- You should leave the code chunk options, `#| eval: false` & `#| echo: true` set as-is. The final infographic is optimized (e.g. text sizes, spaces, etc.) to be saved / viewed as a PNG file, not as rendered in the RStudio Plots pane or embedded in a rendered Quarto document -- you may notice that the text in each individual ggplot looks wayyy too large when viewed in RStudio, but is appropriately-sized when saved as a PNG. We'll talk more about the complexities of saving ggplots in a later discussion section!
    - If you leave the above code chunk options in place, you should be able to successfully render the Quarto document so that it prints only the code and your annotations, along with your responses to the final (part 1b) questions.
- Some lines of code have already been annotated for you -- aim for this level of detail
- Pull up documentation for a function directly in RStudio's **Help** pane by running `?function_name` in the console. Vignettes and `pkgdown` sites are incredible resources as well (e.g. here is a [vignette](https://cloud.r-project.org/web/packages/patchwork/vignettes/patchwork.html){target="_blank"} and the [pkgdown](https://patchwork.data-imaginist.com/){target="_blank"} site for the `{patchwork}` package)
- If you don't immediately understand the purpose of a line / chunk of code, skip over it (temporarily) and continue working your way through the following code -- it oftentimes becomes more evident given additional context.
<!-- - Text will look *super* big and squished in the RStudio Viewer pane and Zoom window -- this is because text is sized so that it renders appropriately when the full infographic is saved as a PNG  -->
 - **Keep in mind:** ggplots are constructed in *layers* -- sometimes temporarily removing or rearranging layers can help clarify what's going on 
- Use RStudio's search bar (`Command` / `Ctrl` + `F`) to ensure that you've replaced all instances of `# ANNOTATE` with your own annotated description

# Code

**Note:** This is sample code. Please refer to the GitHub Classroom link (shared in Slack) for completing the assignment.

{{< include sections/HW1-code.qmd >}}
:::

### 1b. Answer questions {#hw1-p1b}

Once you're done annotating, respond to the following three questions about this data visualization: 

- [ ] **1.** Consider the order of `geom_*()` layers in the US map plot (`plot_us`). Why did the original creator order the layers in this way?
- [ ] **2.** During week 2, we discuss [Choosing the right graphic form](https://eds-240-data-viz.github.io/course-materials/lecture-slides/lecture2.1-choosing-graphic-forms-slides.html#/title-slide). Refer to this lecture when answering the sub-questions, below:
    - [ ] **a.** What "perceptual tasks" (from Cleveland & McGill's heirarchy) must the viewer perform to extract information from these visualizations?
    - [ ] **b.** What task(s) do you think the author wanted to enable or message(s) he wanted to convey with these visualizations (see lecture 2.1, slide 16 for examples)? Be sure to note at least one task / message for each of the three data viz.
    - [ ] **c.** Name at least one caveat to the "hierarchy of perceptual tasks" that the author employed to achieve a goal(s) you noted in question b?
- [ ] **3.** Describe two elements of this piece that you find visually-pleasing / easy to understand / intuitive. Why? 
- [ ] **4.** Describe two elements of this piece that you feel could be better presented in a different way. Why? 
- [ ] **5.** Describe two new things that you learned by interpreting / annotating this code. These could be  packages, functions, or even code organizational approaches that you hadn't previously known about or considered.

## Rubric (specifications) {#hw1-p1-specs}

You must complete the following, as detailed below, to receive a "Satisfactory" mark for Assignment #1, Part I:

::: {.callout-important}
## Complete the following steps in your **GitHub Classroom repo** (`eds240-hw1-username/Part1.qmd`).

Everyone receives one "free pass" for not submitting assignments via specified channels, after which you will receive a "Not Yet" mark.
:::

- [ ] Include your preferred name in the `author` field of the `Part1.qmd` YAML. 
- [ ] Update each comment line in the code that reads, `# ANNOTATE`, with a *brief* description, written in your own words. Some lines that have already been annotated for you -- you do not need to re-write these annotations. You are **allowed up to five incorrect or missing annotations**.
- [ ] Leave the code chunk options set to `eval: false` and `echo: true`, which ensures that your code renders, but the output(s) is suppressed. If you decide to break your code into smaller code chunks, ensure that each has the same options set. 
- [ ] Answer all Part 1b questions. Questions 1 and 2 have correct answers. Responses to questions 3-5 should be unique to you but answered in full. There is no set length requirement, and bullet points are acceptable.
- [ ] We (your instructors) should be able to successfully render `Part1.qmd` locally without errors (in other words, be sure that *you* can render `Part1.qmd` locally before submitting).
- [ ] Push your completed `Part1.qmd` to GitHub via GitHub Classroom by 11:59pm PT on Sat 01/18/2025.

<br>

::: {.center-text .large-fa-icon .teal-text}
{{< fa code title="The symbol for code, </>" >}} End Part I {{< fa code title="The symbol for code, </>" >}}
:::

<br>

# [Part II: Find a data set(s) that interests you]{.pink-text} {#hw1-p2}

## Learning Outcomes {#hw1-p2-LOs}

***Note:** This part of HW #1 is the first step in working towards your final course assignment, [HW #4](HW4.qmd){target="_blank"} (we'll be breaking it down a bit, week-by-week). **This week, we'll mostly be focused on some prep work.** Your final assignment is meant to combine nearly all of the course learning outcomes(!):*

- identify which types of visualizations are most appropriate for your data and your audience
- prepare (e.g. clean, explore, wrangle) data so that it's appropriately formatted for building data visualizations
- build effective, responsible, accessible, and aesthetically-pleasing visualizations using the R programming language, and specifically `{ggplot2}` + ggplot2 extension packages
- write code from scratch and read and adapt code written by others
- apply a DEI (Diversity, Equity & Inclusion) lens to the process of designing data visualizations 

## Description {#hw1-p2-description}

### 2a. Review HW #4 instructions {#hw1-p2a}

[**Begin by reading [HW #4](HW4.qmd){target="_blank"} in full**]{.teal-text} so that you have a clear understanding of the options, goals, and requirements for your final class assignment. 

### 2b. Find data and brainstorm questions {#hw1-p2b}

Now that you have a better understanding of where we're headed, let's make a bit of progress towards that end goal. [**This week, you'll focus on finding data that interest you and begin brainstorming some questions that you might explore / answer using those data.**]{.teal-text} Your data set(s) may be related to a past project, or even your current Capstone or GP. It may also be a completely new data set(s), unrelated to anything you're currently working on. Explore the [Data sources](../../resources.qmd#data-sources){target="_blank"} section of the course website's resources page if you need some inspiration on where to start (you are *not* limited to just these data sources): 

::: {.callout-tip}
## Asking the right question is *critical* and also one of the most challenging steps

I highly recommend checking out the following resources before diving in:

- this short Substack piece by [Enrico Bertini](https://enrico.bertini.io/){target="_blank"}, titled [*Asking the right data questions and asking the data questions right*](https://filwd.substack.com/p/asking-the-right-data-questions-and){target="_blank"}, for some great insights on the challenges and approaches to discovering and revising your data question
- this TED talk titled, [The Power in Effective Data Storytelling](https://www.youtube.com/watch?v=0e52QfQngrM){target="_blank"}, by [Malavica Sridhar](https://www.linkedin.com/in/malavica-sridhar/){target="_blank"} (~15 min; yes, I know the audio gets a little wonky part-way through {{< fa face-smile title="a smiling face" >}})
:::

### 2c. Answer questions {#hw1-p2c}

[**Once you've found your data set(s), answer the following questions:**]{.teal-text}

- [ ] **1.** Which of the [options](HW4.qmd#hw4-options){target="_blank"} are you most interested in pursuing (**Important:** If you plan to pursue [Option 3](HW4.qmd#option3-alternative){target="_blank}, you must submit your proposal by the HW #1 due date)? It's okay if you change your mind later on, but it's helpful to decide on a starting point. 
- [ ] **2.** Describe your data set(s). Be sure to address the following:
    - [ ] **a.** Where did you find these data?
    - [ ] **b.** What variables do these data contain? Is there sufficient metadata for understanding what those variables are?
- [ ] **3.** What steps are involved in downloading or accessing the data (e.g. "I can download using a button via this online portal," "I need to use an API to retrieve the data," "There's an R package with functions for accessing the API,"  etc.)?
- [ ] **4.** What question(s) do you hope to answer using these data (remember to read over Enrico Bertini's [article](https://filwd.substack.com/p/asking-the-right-data-questions-andon how to ask the right questions){target="_blank"})? 
- [ ] **5.** Will you need to combine multiple data sets to successfully answer your question(s)? If so, have you found all the necessary data? Do you have a way to combine it (e.g. matching key values across all data sets)?
- [ ] ***Optional:** Import your data into R! (this will be a part of the next homework assignment) **IMPORTANT:** If your data files are large (>2GB) DO NOT push your data to GitHub -- instead, add your data file(s) or entire data folder to your `.gitignore` (you'll practice this in week 1 discussion section).*

## Rubric (specifications) {#hw1-p2-specs}

You must complete the following, as detailed below, to receive a "Satisfactory" mark for Assignment #1, Part II:

::: {.callout-important}
## Part 2 to be completed under your own GitHub profile
Complete the following step under your own personal GitHub profile, *not* via GitHub Classroom. See details below.
:::

- [ ] Create a GitHub repository named `yourLastName-eds240-HW4`, which is where you'll be doing any / all work related to Assignment #4. Be sure to make your repository public, initialize your repository with a `README`, and add a `.gitignore` file.
- [ ] Create a [GitHub issue](https://docs.github.com/en/issues/tracking-your-work-with-issues/about-issues) (find the **Issues** tab in the top menu bar of your `lastName-eds240-HW4` repo, then click **New issue**) and name it, `HW1 - finding data / initial brainstorming`. Address the following in your issue:
    - [ ] Link to (or otherwise prove the existence of) at least one data set that you plan to use for Assignment #4.
    - [ ] Answer all five Part 2c questions. There is no set length requirement, but you must answer each question in full to receive a Satisfactory score.
    - [ ] Ensure that your GitHub issue is neatly organized / formatted (you can use Markdown syntax here!).
    - [ ] Tag your instructor (**[@samanthacsik](https://github.com/samanthacsik){target="_blank"}**) and TA (**[@annieradams](https://github.com/annieradams){target="_blank"}**) somewhere in your issue (at the start or end may make the most sense) -- this will send us an email notification linking to your issue.
- [ ] Importing your data is *optional* -- if you'd like to start playing around with your data, do so in a file named, `HW1-find-data.qmd`.
- [ ] Add your repository's URL next to your name on [this Google Sheet](https://docs.google.com/spreadsheets/d/1VizY_Yc1m_EwudpIHcCPHlFIo8BIXyoQzlcFg7FhRiw/edit?usp=sharing){target="_blank"} by 11:59pm on Sat 01/18/2025.
- [ ] ***Optional:** If you are pursuing ([Option 3](HW4.qmd#option3-alternative){target="_blank"}), please share a Google Doc with your proposal via email by 11:59pm on Sat 01/18/2025. Be sure to send it to both your instructor (**scsik@ucsb.edu**) and TA (**annieradams@ucsb.edu**) with the subject line: **EDS 240 HW4 Proposal Submission.***

<br>

::: {.center-text .large-fa-icon .teal-text}
{{< fa table title="A data table with two columns and two rows" >}} End Part II {{< fa table title="A data table with two columns and two rows" >}}
:::
