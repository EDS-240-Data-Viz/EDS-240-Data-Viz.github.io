---
title: "(Optional) Graphic Design, with Dr. Alex Phillips"
subtitle: "Week 5"
description: "Friday February 7^th^, 2025"
---

```{r}
#| eval: true 
#| echo: false
#| fig-align: "center"
#| out-width: "50%" 
#| fig-alt: "Logos for Affinity Designer, Canva, and Google Docs"
knitr::include_graphics(here::here("images", "graphic-design-logos.png"))
```

::: {.center-text .gray-text}
*Logos of various software which can be used for graphic design work. [Affinity Designer](https://affinity.serif.com/en-us/designer/){target="_blank"} (left), [Canva](https://www.canva.com/){target="_blank"} (top right), and [Google Docs](https://docs.google.com/){target="_blank"} (bottom right).*
:::

## {{< fa clipboard-list title="a clipboard with a To Do list" >}} Pre-lecture Prep {#pre-class-prep}

**This workshop will focus primarily on using Affinity Designer for infographic design.** We'll see various examples of work created using Canva and Google Docs, though we won't spend much time learning these tools. They *are* awesome (and free) alternatives to Affinity, so you may decide to explore these more on your own time.

### A. Download / install your *free* Affinity V2 Designer Trial

The Affinity team was kind enough to provide us with enough extended Affinity V2 app licenses for all enrolled students, which are valid now until March 31, 2025. Follow [these installation instructions](https://docs.google.com/document/d/1atPlULR0zttKtwRcw2CcKUYfKH9BLMtC2nHArbSUE5c/edit?tab=t.0){target="_blank"} ahead of class. 

Affinity is a subscription-free product -- if you are interested in purchasing it after your trial ends, visit [their website](https://affinity.serif.com/en-us/affinity-pricing/){target="_blank"}.

### B. Download saved ggplots

We'll learn how to use Affinity to edit exported ggplots and transform them into (mini) infographics. Download both the [PNG](https://drive.google.com/file/d/1AHn-jJn80-li6W7fBjtX5sJEemJQ0l1J/view?usp=sharing){target="_blank"} and [PDF](https://drive.google.com/file/d/16H9M_mDSzyYqS7c_yB06jQIfSYhLH-Ce/view?usp=sharing){target="_blank"} versions of this plot ahead of class.

### C. (OPTIONAL) Explore Canva & Google Docs as alternative tools (on your own time)

You can create a *free* Canva account by visiting [canva.com](https://www.canva.com/free/){target="_blank"}, and / or access all of your Google Apps (including Goolge Docs) using your **UCSBnetID@ucsb.edu** account.

## {{< fa person-chalkboard title="a person pointing at a chalkboard" >}} Lecture Materials {#lecture-materials}

*Coming soon!*

```{r}
#| eval: false
#| echo: false
#| fig-align: "center"
#| fig-asp: 0.7
##~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
##                                    setup                                 ----
##~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

#.........................load libraries.........................
library(tidyverse)

#..........................read in data..........................

# read in Google Sheet ----
lobs <- googlesheets4::read_sheet("https://docs.google.com/spreadsheets/d/1DkDVcl_9rlaqznHfa_v1V1jtZqcuL75Q6wvAHpnCHuk/edit#gid=2143433533") |>
  mutate(temp = as.factor(temp))

##~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
##                            create lobster plot                           ----
##~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

#..........................create theme..........................
# lob_theme <- function(){
#   theme_light() +
#     theme(
#       axis.title.x = ggtext::element_markdown(size = 13,
#                                               margin = margin(t = 1, r = 0, b = 0, l = 0, unit = "lines")),
#       axis.title.y = ggtext::element_markdown(size = 13,
#                                               margin = margin(t = 0, r = 1, b = 0, l = 0, unit = "lines")),
#       axis.text = element_text(color = "black", size = 12),
#       panel.border = element_rect(colour = "black", size = 0.7),
#       panel.grid = element_blank(),
#       legend.title = element_text(size = 11),
#       legend.text = element_text(size = 10),
#       legend.position = c(0.95, 0.95),
#       legend.justification = c(0.95, 0.95),
#       legend.box.background = element_rect(color = "black", size = 1.1)
# 
#     )
# }

# lob_theme <- function(){
#   theme_light() +
#     theme(
#       axis.title.x = ggtext::element_markdown(size = 16,
#                                               margin = margin(t = 10, r = 0, b = 0, l = 0),
#                                               lineheight = 1.5),
#       axis.title.y = ggtext::element_markdown(size = 16,
#                                               margin = margin(t = 0, r = 10, b = 0, l = 0),
#                                               lineheight = 1.5),
#       axis.text = element_text(color = "black", size = 14),
#       panel.border = element_rect(colour = "black", linewidth = 0.7),
#       panel.grid = element_blank(),
#       legend.title = element_text(size = 15),
#       legend.text = element_text(size = 13),
#       #legend.justification.inside = c(0.95, 0.95),
#       #legend.position.inside = c(0.95, 0.95),
#       #legend.justification = c(0.95, 0.95),
#       legend.box.background = element_rect(color = "black", linewidth = 1.1)
#     )
# }

#..........................create scales.........................
lob_palette <- c("11" = "#7B8698",
                 "16" = "#BAD7E5",
                 "21" = "#DC7E7C",
                 "26" = "#7D3E40")

lob_shapes <-  c("11" = 15,
                 "16" = 16,
                 "21" = 17,
                 "26" = 18)

lob_sizes <- c("11" = 6,
               "16" = 6,
               "21" = 5.5,
               "26" = 7)

#........................create plot text........................
x_axis_lab <- glue::glue("Resting Metabolic Rate<br>
                         (mg O<sub>2</sub> kg<sup>-1</sup> min<sup>-1</sup>)")

y_axis_lab <- glue::glue("Maximum Consumption Rate<br>
                         (prey consumed predator<sup>-1</sup> 24hr<sup>-1</sup>)")

#............................plot data...........................
lob_plot <- ggplot(lobs, aes(x = SMR, y = avg_eaten,
                             color = temp, shape = temp, size = temp)) +
  geom_point(alpha = 0.8) +
  #scale_color_manual(values = lob_palette) +
  scale_shape_manual(values = lob_shapes) +
  scale_size_manual(values = lob_sizes) +
  scale_x_continuous(breaks = seq(0, 1.5, by = 0.2)) +
  scale_y_continuous(breaks = seq(0, 35, by = 5)) +
  labs(x = x_axis_lab,
       y = y_axis_lab,
       color = "Temp (ºC)",
       shape = "Temp (ºC)",
       size = "Temp (ºC)") +
  guides(
    color = guide_legend(position = "inside"),
    shape = guide_legend(position = "inside")
    ) +
  theme_light() +
    theme(
      axis.title.x = ggtext::element_markdown(size = 17,
                                              margin = margin(t = 15, r = 0, b = 0, l = 0),
                                              lineheight = 1.5),
      axis.title.y = ggtext::element_markdown(size = 17,
                                              margin = margin(t = 0, r = 15, b = 0, l = 0),
                                              lineheight = 1.5),
      axis.text = element_text(color = "black", size = 16),
      panel.border = element_rect(colour = "black", linewidth = 0.7),
      panel.grid = element_blank(),
      legend.title = element_text(size = 16),
      legend.text = element_text(size = 14),
      legend.position.inside = c(0.83, 0.8),
      legend.box.background = element_rect(color = "gray30", linewidth = 1)
    )

lob_plot

lob_plot_marg <- ggExtra::ggMarginal(lob_plot, type = "density", groupFill = TRUE, groupColour = TRUE)

ggsave(filename = "lob_plot_updated_colors.pdf", 
       plot = lob_plot_marg,
       path = here::here("course-materials", "images"))

lob_plot +
  theme(
    legend.position.inside = c(1, 1),
  )

ggsave(filename = "lob_plot_updated_colors2.png", 
       plot = lob_plot,
       path = here::here("course-materials", "images"))
```



