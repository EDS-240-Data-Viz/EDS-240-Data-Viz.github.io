---
format: 
  revealjs:
    slide-number: true
    # code-link: true
    highlight-style: a11y
    chalkboard: true
    theme: 
      - ../meds-slides-styles.scss
editor_options: 
  chunk_output_type: console
---

## {#title-slide data-menu-title="Title Slide" background="#053660"} 

[EDS 240: Lecture 3.2]{.custom-title}

[*Visualizing Distributions*]{.custom-subtitle}

<hr class="hr-teal">

[Week 3 | January 22^nd^, 2024]{.custom-subtitle3}

<!-- --- -->

<!-- ## {#distributions data-menu-title="Visualizing distributions" background="#047C90"}  -->

<!-- <div class="page-center vertical-center"> -->
<!-- <p class="custom-subtitle bottombr">Visualizing Distributions</p> -->
<!-- <p class="caption-text">boxplots, violin plots, histograms, density charts, ridgeline plots</p> -->
<!-- </div> -->

---

## {#viz-dist data-menu-title="Visualizing distributions"} 

["Core" distribution charts]{.slide-title}

<hr>

```{r}
#| eval: true
#| echo: false
library(palmerpenguins)
library(tidyverse)
library(ggridges)
```

:::: columns

::: {.column width="33%"}
::: {.center-text}
**Histograms**
:::
```{r}
#| eval: true
#| echo: false
#| fig-align: "center"
ggplot(penguins, aes(x = body_mass_g, fill = species)) +
  geom_histogram(alpha = 0.5, position = "identity")
```
:::

::: {.column width="33%"}
::: {.center-text}
**Density plots**
:::
```{r}
#| eval: true
#| echo: false
#| fig-align: "center"
ggplot(penguins, aes(x = body_mass_g, fill = species)) +
  geom_density(alpha = 0.5)
```
:::

::: {.column width="33%"}
::: {.center-text}
**Ridgeline plots**
:::
```{r}
#| eval: true
#| echo: false
#| fig-align: "center"
ggplot(penguins, aes(x = body_mass_g, y = species, fill = species)) +
  ggridges::geom_density_ridges(alpha = 0.5)
```
:::

::::

:::: columns

::: {.column width="50%"}
::: {.center-text}
**Box plots**
:::
```{r}
#| eval: true
#| echo: false
#| fig-align: "center"
#| out-width: "65%"
ggplot(penguins, aes(x = body_mass_g, y = species, fill = species)) +
  geom_boxplot(alpha = 0.5)
```
:::

::: {.column width="50%"}
::: {.center-text}
**Violin plots**
:::
```{r}
#| eval: true
#| echo: false
#| fig-align: "center"
#| out-width: "65%"
ggplot(penguins, aes(x = body_mass_g, y = species, fill = species)) +
  geom_violin(alpha = 0.5)
```
:::

::::

::: footnote
::: {.center-text}
[Examples show the distribution of penguin body masses (g) for Adelie, Chinstrap & Gentoo penguins.]{.body-text-s .gray-text} 
:::
:::

---

## {#hist-overview data-menu-title="Histogram overview"} 

[Histograms]{.slide-title}

<hr>

[**What are they?**]{.teal-text} 

- Histograms are used to represent the **distribution of a *numeric* variable(s)**, which is **cut into several bins**. The number of observations per bin is represented by the height of the bar.

:::: columns 

::: {.column width="50%"}
[**Need:**]{.teal-text} 

- a numeric variable with lots of values
- meaningful differences between values
- `{ggplot2}` package


[**Important considerations:**]{.teal-text} 

- bin width
- number of groups that you're comparing (<=3)
:::

::: {.column width="50%"}
```{r}
#| eval: true
#| echo: false
#| fig-align: "center"
ggplot(penguins, aes(x = body_mass_g, fill = species)) +
  geom_histogram(alpha = 0.5, position = "identity")
```
:::

::::

---

## {#density-overview data-menu-title="Density plot overview"} 

[Density plots]{.slide-title}

<hr>

[**What are they?**]{.teal-text} 

- A smoothed version of a histogram. Density plots are representations of the **distribution of a *numeric* variable(s)**, which uses a **[kernel density estimate](https://chemicalstatistician.wordpress.com/2013/06/09/exploratory-data-analysis-kernel-density-estimation-in-r-on-ozone-pollution-data-in-new-york-and-ozonopolis/)** to show the probability density function of the variable.

:::: columns 

::: {.column width="50%"}
[**Need:**]{.teal-text} 

- a numeric variable with lots of values
- `{ggridges}` package

[**Important considerations:**]{.teal-text} 

- can be misleading with small data sets
- bandwidth
- number of groups that you're comparing (<=3)
:::

::: {.column width="50%"}
```{r}
#| eval: true
#| echo: false
#| fig-align: "right"
ggplot(penguins, aes(x = body_mass_g, fill = species)) +
  geom_density(alpha = 0.5)
```
:::

::::

---

## {#ridgeline-overview data-menu-title="Ridgeline plot overview"} 

[Ridgeline plots]{.slide-title}

<hr>

[**What are they?**]{.teal-text} 

- Ridgeline plots show the **distribution of a numeric variable** for **multiple groups**.

:::: columns 

::: {.column width="50%"}
[**Need:**]{.teal-text} 

- a numeric variable with lots of values
- medium to high group numbers
- `{ggridges}` package

[**Important considerations:**]{.teal-text} 

- work best when you have > 6 groups
- works well when there is a clear pattern in the result (e.g. if there is an obvious ranking in groups)
:::

::: {.column width="50%"}

<br>

```{r}
#| eval: true
#| echo: false
#| fig-align: "center"
ggplot(penguins, aes(x = body_mass_g, y = species, fill = species)) +
  ggridges::geom_density_ridges(alpha = 0.5)
```
:::

::::

---

## {#boxplot-overview data-menu-title="Box plot overview"} 

[Box plots]{.slide-title}

<hr>

[**What are they?**]{.teal-text} 

- [Box plots **summarize the distribution of a numeric variable for one or serveral groups**, providing the median (line that divides the box), the upper (Q3) and lower (Q1) [quartiles](https://en.wikipedia.org/wiki/Quartile) (ends of the box), the highest and lowest values, excluding outliers (the whiskers), and potential outliers (dots extending beyond the end of the whiskers).]{.body-text-s}

:::: columns 

::: {.column width="50%"}
[**Need:**]{.teal-text} 

- a numeric variable, often with multiple groups
- `{ggplot2}` package

[**Important considerations:**]{.teal-text} 

- box plots *summarize* data, meaning we can't see the underlying distribution (no way to know sample size)
- add jittered points on top, or if large sample size, consider a violin plot
:::

::: {.column width="50%"}

<br>

```{r}
#| eval: true
#| echo: false
#| fig-align: "center"
ggplot(penguins, aes(x = body_mass_g, y = species, fill = species)) +
  geom_boxplot(alpha = 0.5)
```
:::

::::

---

## {#violin-plot-overview data-menu-title="Violin plot overview"} 

[Violin plots]{.slide-title}

<hr>

[**What are they?**]{.teal-text} 

- [Violin plots visualize the **distribution of a numeric variable for one or several groups**, where the shape of the violin represents the density estimate of the variable (i.e. the more data points in a specific range, the larger the violin is for that range). They provide more information about the underlying distribution than a box plot.]{.body-text-s}

:::: columns 

::: {.column width="50%"}
[**Need:**]{.teal-text} 

- a numeric variable, often with multiple groups
- `{ggplot2}` package

[**Important considerations:**]{.teal-text}   

- order groups by median value can make it easier to understand  
- show sample size when comparing groups with very different distributions (e.g. half violin plot) 
:::

::: {.column width="50%"}

<br>

```{r}
#| eval: true
#| echo: false
#| fig-align: "center"
ggplot(penguins, aes(x = body_mass_g, y = species, fill = species)) +
  geom_violin(alpha = 0.5)
```
:::

::::

---

<!-- ## {#dist-numeric data-menu-title="Distribution of numeric vars"}  -->

<!-- [Distribution of a numeric variable(s)]{.slide-title2} -->

<!-- <hr> -->

<!-- ::: panel-tabset -->

<!-- ## Histogram -->

<!-- Histograms are used to represent the distribution of a **numeric** variable(s), which is **cut into several bins**. The number of observations per bin is represented by the height of the bar. -->

<!-- ```{r} -->
<!-- #| eval: true -->
<!-- #| echo: true -->
<!-- #| out-width: "50%" -->
<!-- library(lterdatasampler) -->
<!-- library(tidyverse) -->

<!-- ggplot(knz_bison, aes(x = animal_weight, fill = animal_sex)) + -->
<!--   geom_histogram(position = "identity", alpha = 0.7) -->
<!-- ``` -->

<!-- ## Density plot -->

<!-- Density plots are representations of the distribution of a **numeric** variable(s), which uses a **[kernel density estimate](https://chemicalstatistician.wordpress.com/2013/06/09/exploratory-data-analysis-kernel-density-estimation-in-r-on-ozone-pollution-data-in-new-york-and-ozonopolis/)** to show the probability density function of the variable. -->

<!-- ```{r} -->
<!-- #| eval: true -->
<!-- #| echo: true -->
<!-- #| out-width: "50%" -->
<!-- library(lterdatasampler) -->
<!-- library(tidyverse) -->

<!-- ggplot(knz_bison, aes(x = animal_weight, fill = animal_sex)) + -->
<!--   geom_density(alpha = 0.7) -->
<!-- ``` -->

<!-- ::: -->

<!-- --- -->

<!-- ## {#dist-num-considerations data-menu-title="Considerations (hist & dens)"}  -->

<!-- [Considerations]{.slide-title2} -->

<!-- <hr> -->

<!-- ::: panel-tabset -->

<!-- ## Bin width -->

<!-- **Try several bin widths, and make sure all bins are the same size.** By default, `geom_histogram()` uses 30 `bins`. Alternatively, adjust `binwidth`. -->

<!-- :::: columns -->

<!-- ::: {.column width="50%"} -->
<!-- [` binwidth = 50`:]{.body-text-s} -->
<!-- ```{r} -->
<!-- #| eval: true -->
<!-- #| echo: true -->
<!-- #| out-width: "90%" -->
<!-- library(lterdatasampler) -->
<!-- library(tidyverse) -->

<!-- ggplot(knz_bison, aes(x = animal_weight, fill = animal_sex)) + -->
<!--   geom_histogram(position = "identity", alpha = 0.7, binwidth = 50) -->
<!-- ``` -->
<!-- ::: -->

<!-- ::: {.column width="50%"} -->
<!-- [`binwidth = 500`:]{.body-text-s} -->
<!-- ```{r} -->
<!-- #| eval: true -->
<!-- #| echo: true -->
<!-- #| out-width: "90%" -->
<!-- library(lterdatasampler) -->
<!-- library(tidyverse) -->

<!-- ggplot(knz_bison, aes(x = animal_weight, fill = animal_sex)) + -->
<!--   geom_histogram(position = "identity", alpha = 0.7, binwidth = 500) -->
<!-- ``` -->
<!-- ::: -->

<!-- :::: -->

<!-- ## Group number -->

<!-- **Comparing more than ~3 groups in the same histogram leads to cluttered / hard to read plots.** Instead, try a violin/box/ridgeline plot or faceting: -->

<!-- :::: columns -->

<!-- ::: {.column width="50%"} -->
<!-- [Too many groups...]{.body-text-s} -->
<!-- ```{r} -->
<!-- #| eval: true -->
<!-- #| echo: true -->
<!-- #| out-width: "90%" -->
<!-- library(lterdatasampler) -->
<!-- library(tidyverse) -->

<!-- ggplot(pie_crab, aes(x = size, fill = site)) + -->
<!--   geom_histogram(position = "identity", alpha = 0.7) -->
<!-- ``` -->
<!-- ::: -->

<!-- ::: {.column width="50%"} -->
<!-- [Also beware of unnecessary colors!]{.body-text-s} -->
<!-- ```{r} -->
<!-- #| eval: true -->
<!-- #| echo: true -->
<!-- #| out-width: "90%" -->
<!-- library(lterdatasampler) -->
<!-- library(tidyverse) -->

<!-- ggplot(pie_crab, aes(x = size)) + -->
<!--   geom_histogram(position = "identity", alpha = 0.7) + -->
<!--   facet_wrap(~site) -->
<!-- ``` -->
<!-- ::: -->

<!-- :::: -->

<!-- ::: -->

<!-- --- -->

<!-- STACKED DENSITY CHARTS -->
<!-- MIRRORED DENSITY / HISTOGRAM -->

<!-- ## {#variants-num-alt data-menu-title="Variants (hist & dens)"}  -->

<!-- [Variants]{.slide-title3} -->

<!-- <hr> -->

<!-- ::: panel-tabset -->

<!-- ## Mirrorred -->

<!-- ```{r} -->
<!-- library(lterdatasampler) -->
<!-- library(tidyverse) -->

<!-- # ggplot(knz_bison, aes(x = animal_weight, fill = animal_sex)) + -->
<!-- #   geom_histogram(position = "identity", alpha = 0.7, binwidth = 500) -->

<!-- female_bison <- knz_bison |> filter(animal_sex == "F") -->
<!-- male_bison <- knz_bison |> filter(animal_sex == "M") -->

<!-- # bison_wrangled <- knz_bison |>  -->
<!-- #   mutate(animal_weight = ifelse(test = grepl("F", animal_sex) == TRUE,  -->
<!-- #                                 yes = animal_weight,  -->
<!-- #                                 no = animal_weight * -1)) -->

<!-- ggplot(aes(x = x)) +  -->
<!--   geom_histogram(male_bison, aes(x = animal_weight, y = ..density.., fill = "#69b3a2")) -->

<!-- ggplot(data, aes(x=x) ) + -->
<!--   geom_histogram( aes(x = var1, y = ..density..), fill="#69b3a2" ) + -->
<!--   geom_label( aes(x=4.5, y=0.25, label="variable1"), color="#69b3a2") + -->
<!--   geom_histogram( aes(x = var2, y = -..density..), fill= "#404080") + -->
<!--   geom_label( aes(x=4.5, y=-0.25, label="variable2"), color="#404080") + -->
<!--   theme_ipsum() + -->
<!--   xlab("value of x") -->
<!-- # ggplot() + -->
<!-- #   geom_histogram(male_bison, mapping = aes(x = animal_weight)) +  -->
<!-- #   geom_histogram(female_bison, mapping = aes(x = -(animal_weight), fill = "blue")) -->
<!-- ``` -->


<!-- ## Marginal plots -->

<!-- ::: -->

<!-- --- -->

