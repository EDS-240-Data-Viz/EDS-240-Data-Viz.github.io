---
format: revealjs
editor_options: 
  chunk_output_type: console
---

```{r}
#| eval: true
#| echo: false
#| message: false
#| warning: false
#| fig-align: "center"

##~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
##                              important links                             ----
##~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

# Following tutorial by Louise E. Sinks: <https://lsinks.github.io/posts/2023-08-28-TidyTuesday-Refugees/TidyTuesday34-refugees.html>

##~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
##                                    setup                                 ----
##~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

#..........................load packages.........................
library(refugees)
library(tidyverse) 
library(networkD3)
#library(ggsankey) # not available for my version of R, so downloaded using devtools (https://github.com/davidsjoberg/ggsankey)

##~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
##                               data wrangling                             ----
##~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

#....................filter for just 2022 data...................
pop2022 <- refugees::population |> 
  filter(year == 2022) |> 
  select(year, coo_name, coa_name, refugees) #|> 

#....................top 3 countries of origin...................
top_3_coo <- pop2022 |> 
  group_by(coo_name) |> 
  summarize(num_by_coo = sum(refugees)) |> 
  slice_max(order_by = num_by_coo, n = 3) 

#...............names of top 3 countries of origin...............
top_3_coo_names <- top_3_coo |>
  pull(coo_name)

#....................top 3 countries of asylum...................
top_3_coa <- pop2022 |> 
  group_by(coa_name) |> 
  summarize(num_by_coa = sum(refugees)) |> 
  slice_max(order_by = num_by_coa, n = 3)

#...............names of top 3 countries of asylum...............
top_3_coa_names <- top_3_coa |>  
  pull(coa_name)

#..............all other countries listed as 'other'.............
pop2022 <- pop2022 |> 
  mutate(coo_name = as.factor(coo_name),
         coa_name = as.factor(coa_name)) |> 
  mutate(coo_name = fct_other(f = coo_name, keep = top_3_coo_names, other_level = "other"),
         coa_name = fct_other(f = coa_name, keep = top_3_coa_names, other_level = "other"))

#..............separate df for just 'other' origins..............
pop2022_no_other <- pop2022 |> 
  filter(coo_name != "other")

#........get unique names of top 3 coo and coa for nodes.........
nodes <- data.frame(name = c(pop2022_no_other$coo_name, pop2022_no_other$coa_name) %>%
                      unique()
                    )

# get IDs for source and target, 0-indexed ----
pop2022_no_other <- pop2022_no_other |> 
  mutate(IDsource = match(pop2022_no_other$coo_name, nodes$name) - 1,
         IDtarget = match(pop2022_no_other$coa_name,  nodes$name) - 1)

##~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
##                                create sankey                             ----
##~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

# color scale ----
ColorScale = 'd3.scaleOrdinal([`#94438B`, `#B6366A`,`#E1AAC9`, `#909497`,`#6AA26F`, `#A3C7AC`, `#E3EEAE`])' 

# Make the Network ----
sankey <- sankeyNetwork(
  Links = pop2022_no_other,
  Nodes = nodes,
  Source = "IDsource",
  Target = "IDtarget",
  Value = "refugees",
  NodeID = "name",
  sinksRight = TRUE,
  colourScale = ColorScale,
  nodeWidth = 40,
  fontSize = 13,
  nodePadding = 20,
  width = 600,
  height = 400
)

sankey
```



